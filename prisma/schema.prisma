// schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Client {
  id        String    @id @default(cuid())
  card      String?   @unique @default(dbgenerated("gen_random_uuid()"))
  firstname String
  lastname  String
  email     String    @unique
  createdAt DateTime  @default(now()) @map(name: "created_at")
  updatedAt DateTime  @updatedAt @map(name: "updated_at")
  //relation
  products  Product[]

  @@map(name: "Clients")
}

model Product {
  id                String   @id @default(cuid())
  name              String
  price             Decimal
  qrcode            String   @unique @map(name: "qrcode")
  published         Boolean  @default(true)
  madeBy            String?
  warrantyExpiresOn DateTime
  createdAt         DateTime @default(now()) @map(name: "created_at")
  updatedAt         DateTime @updatedAt @map(name: "updated_at")
  status            Status   @default(READY_TO_USE)

  //relation
  owner   Client? @relation(fields: [ownerId], references: [id])
  ownerId String?

  //relation
  events Event[]
}

enum Status {
  READY_TO_USE
  UNDER_REPAIR
  OUT
}


model Event {
  id          String     @id @default(cuid())
  content     String
  createdAt   DateTime   @default(now()) @map(name: "created_at")
  //relation product
  Product     Product?   @relation(fields: [productId], references: [id])
  productId   String?
  //relation one to one eventType
  eventType   EventType? @relation(fields: [eventTypeId], references: [id])
  eventTypeId String?
}

model EventType {
  id      String  @id @default(cuid())
  content String
  events  Event[]
}

